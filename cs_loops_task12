using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Net.Mime.MediaTypeNames;

namespace gamesmage
{
    internal class Program
    {
        static void Main(string[] args)
        {

            string physicalDamageHeroDescription = "5-15";
            string fireDamageHeroDescription = "30-65";
            string coldDamageHeroDescription = "8-25";
            string airDamageHeroDescription = "1-17";

            const int ChoicePhysicalDamageHero = 1;
            const int ChoiceFireDamageHero = 2;
            const int ChoiceAirDamageHero = 3;
            const int ChoiceColdDamageHero = 4;
            int choiceSpell;

            Random randomPhysicalDamageHero = new Random();
            Random randomFireDamageHero = new Random();
            Random randomAirDamageHero = new Random();
            Random randomColdDamageHero = new Random();

            float physicalDamageHero;
            float fireDamageHero;
            float coldDamageHero;
            float airDamageHero;

            string physicalDamageCreationDescription = "4-12";
            string fireDamageCreationDescription = "3-13";
            string coldDamageCreationDescription = "5-10";
            string airDamageCreationDescription = "2-8";

            Random randomPhysicalDamageCreation = new Random();
            Random randomFireDamageCreation = new Random();
            Random randomColdDamageCreation = new Random();
            Random randomAirDamageCreation = new Random();

            float physicalDamageCreation;
            float fireDamageCreation;
            float coldDamageCreation;
            float airDamageCreation;

            float physicalDefenseHero = 30;
            float healthHero = 90;
            float fireDefenseHero = 25;
            float coldDefenseHero = 15;
            float airDefenseHero = 20;

            float physicalDefenseCreation = 15;
            float healthCreation = 150;
            float fireDefenseCreation = 2;
            float coldDefenseCreation = 25;
            float airDefenseCreation = 15;


            Console.WriteLine("Вы спускаетесь в подземелье и видите как нас бежит враг, перед спуском " +
                "старейшена дал вам подсказку что при атаке врага, враг применяет аналогичное заклинание");
            Console.WriteLine("Приготовтесь враг вышел, для продолжения нажмите любуюкномку");
            Console.ReadKey();
            Console.Clear();

            while (healthHero >0 && healthCreation >0)
            {


                Console.WriteLine("Характеристики героя:\n" + "Защита: " + physicalDefenseHero + "\n" + "Здоровье: " + healthHero + "\n" +
                     "Огненная защита: " + fireDefenseHero + "\n" + "Защита от холода: " + coldDefenseHero + "\n" + "Защита от воздуха: " + airDefenseHero);

                Console.SetCursorPosition(26, 0);
                Console.WriteLine("Характеристики врага:");
                Console.SetCursorPosition(26,1);
                Console.WriteLine("Защита: " + physicalDefenseCreation);
                Console.SetCursorPosition(26,2);
                Console.WriteLine("Здоровье: " + healthCreation);
                Console.SetCursorPosition(26,3);
                Console.WriteLine("Огненная защита: " + fireDefenseCreation);
                Console.SetCursorPosition(26,4);
                Console.WriteLine("Защита от холода: " + coldDefenseCreation);
                Console.SetCursorPosition(26,5);
                Console.WriteLine("Защита от воздуха: " + airDefenseCreation);

                Console.WriteLine();
                Console.WriteLine("Выбирете заклинание :");

                Console.WriteLine($"{ChoicePhysicalDamageHero} Визический урон ({physicalDamageHeroDescription})");
                Console.WriteLine($"{ChoiceFireDamageHero} Огненый урон ({fireDamageHeroDescription})");
                Console.WriteLine($"{ChoiceAirDamageHero} Воздушный урон ({airDamageHeroDescription})");
                Console.WriteLine($"{ChoiceColdDamageHero} Ледяной урон ({coldDamageHeroDescription})");

                choiceSpell = Convert.ToInt32(Console.ReadLine());

                switch (choiceSpell)
                {
                    case ChoicePhysicalDamageHero:
                        physicalDamageHero = randomPhysicalDamageHero.Next(5, 15);
                        Console.WriteLine($"Вы наноситие {physicalDamageHero} урона врагу");
                        healthCreation -= physicalDamageHero -((physicalDamageHero/100) * physicalDefenseCreation);
                        Console.WriteLine($"У врага осталось {healthCreation} здоровья");
                        physicalDamageCreation = randomPhysicalDamageCreation.Next(4, 12);
                        Console.WriteLine($"Враг в ответ наносит {physicalDamageCreation} урона вам");
                        healthHero -= physicalDamageCreation - ((physicalDamageCreation / 100) * physicalDefenseHero);
                        Console.WriteLine($"У вас осталось {healthHero} здоровья");                       
                        break;
                   
                    case ChoiceFireDamageHero:
                        fireDamageHero = randomFireDamageHero.Next(30, 65);
                        Console.WriteLine($"Вы наноситие {fireDamageHero} урона врагу");
                        healthCreation -= fireDamageHero - ((fireDamageHero / 100) * fireDefenseCreation);
                        Console.WriteLine($"У врага осталось {healthCreation} здоровья");
                        fireDamageCreation = randomFireDamageCreation.Next(3, 13);
                        Console.WriteLine($"Враг в ответ наносит {fireDamageCreation} урона вам");
                        healthHero -= fireDamageCreation - ((fireDamageCreation / 100) * fireDefenseHero);
                        Console.WriteLine($"У вас осталось {healthHero} здоровья");                       
                        break;

                    case ChoiceAirDamageHero:
                        airDamageHero = randomAirDamageHero.Next(1, 7);
                        Console.WriteLine($"Вы наноситие {airDamageHero} урона врагу");
                        healthCreation -= airDamageHero - ((airDamageHero / 100) * airDefenseCreation);
                        Console.WriteLine($"У врага осталось {healthCreation} здоровья");
                        airDamageCreation = randomAirDamageCreation.Next(2, 8);
                        Console.WriteLine($"Враг в ответ наносит {airDamageCreation} урона вам");
                        healthHero -= airDamageCreation - ((airDamageCreation / 100) * airDefenseHero);
                        Console.WriteLine($"У вас осталось {healthHero} здоровья");
                        break;

                    case ChoiceColdDamageHero:
                        coldDamageHero = randomColdDamageHero.Next(8, 25);
                        Console.WriteLine($"Вы наноситие {coldDamageHero} урона врагу");
                        healthCreation -= coldDamageHero - ((coldDamageHero / 100) * coldDefenseCreation);
                        Console.WriteLine($"У врага осталось {healthCreation} здоровья");
                        coldDamageCreation = randomColdDamageCreation.Next(5, 10);
                        Console.WriteLine($"Враг в ответ наносит {coldDamageCreation} урона вам");
                        healthHero -= coldDamageCreation - ((coldDamageCreation / 100) * coldDefenseHero);
                        Console.WriteLine($"У вас осталось {healthHero} здоровья");
                        break;

                        default:
                        Console.WriteLine("Ввели некорректное значение");
                        break;

                };

                Console.ReadKey();
                Console.Clear();
            }

            if (healthHero <= 0 && healthCreation <= 0)
            {
                Console.WriteLine("Ничья");
            }

            else if (healthHero <= 0 || healthCreation > 0)
            {
                Console.WriteLine("Победил врг");
            }

            else if (healthHero > 0 || healthCreation <= 0)
            {
                Console.WriteLine("Победил герой");
            }

            Console.ReadKey();

        }

    }
}
